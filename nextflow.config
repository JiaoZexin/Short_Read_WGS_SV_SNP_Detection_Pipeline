// nextflow.config - Configuration for SV/SNP Detection pipeline

// 启用 Nextflow DSL2（模块化流程必需）
nextflow.enable.dsl = 2

params {
  adapters         = "${baseDir}/0.data/adaptor.fa"
  sample_list      = "${baseDir}/Results/sample.txt"
  reference_path   = "${baseDir}/Results/2.index/"
  reference_fasta  = "${baseDir}/Results/2.index/ref.fa"
  reference_gff3   = "${baseDir}/Results/2.index/ref.gff3"
  pep_fasta        = "${baseDir}/0.data/pep.fa"
  output_dir       = "${baseDir}/Results/"
  snp_vcf          = '${baseDir}/Results/10.snp/snp.final.vcf.recode.vcf'
  SV_vcf           = '${baseDir}/Results/9.final/SV.final.vcf'
  control_file     = '${baseDir}/0.data/control_file_final.txt' 
  phenotype        = '${baseDir}/0.data/phenotype.txt' 
  use_delly = false
  use_cnvpytor = false
  use_bcftools = false
  use_deepvariant = false
  use_freebayes = false
  use_sv_visualize = false
  use_snpeff = false
  use_annovar = false
  use_go_kegg = false
  use_gwas = false
  use_imputation = false
  help = false
}

process {
  withLabel: 'lowmem' {
    cpus = 1
    memory = '2 GB'
    time = '1h'
  }
  withLabel: 'standard' {
    cpus = 2
    memory = '4 GB'
    time = '2h'
  }
  withLabel: 'highmem' {
    cpus = 4
    memory = '8 GB'
    time = '4h'
  }

  withLabel: 'bigmem' {
    cpus = 16
    memory = '32 GB'
    time = '12h'
  }
  withName: '.*' {
    errorStrategy = 'retry'
    maxRetries = 3
    cache = true
  }
  
}

profiles {
  standard {
    process.executor = 'local'
    docker.enabled = false
  }

  slurm {
    process.executor = 'slurm'
    process.queue = 'normal'
    process.clusterOptions = '--account=your_account'
  }

  docker_conda {
    docker.enabled = true
    docker.runOptions = '-u \$(id -u):\$(id -g)'
    conda.enabled = true
  }

  docker {
    docker.enabled = true
    docker.runOptions = '-u \$(id -u):\$(id -g)'
  }

  conda {
    conda.enabled = true
  }
}
